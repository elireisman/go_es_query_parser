package grammar

import "gopkg.in/olivere/elastic"

type DSL2ES Peg {
    Query     *elastic.BoolQuery
    Filters   *elastic.BoolQuery
    Depth     int
}


# Rules

Result <- Query !.

Query <- AndExprs / OrExprs / Expr

AndExprs <- Expr (SP AND SP Expr)+

OrExprs <- Expr (SP OR SP Expr)+

Expr <- (NOT SP)? Term

Term <- KeyValue / Word / '(' SP? Query SP? ')'

KeyValue <- Key COLON Value

Key <- [a-z]+

Value <- Range / Boolean / Phrase / Date / Number / Word

Range <- RANGEOP Number

Date <- Year SEP Month SEP Day

Phrase <- DQ [^"]+ DQ

Month <- '0' [1-9] / '1' [0-2]

Year <- [12] [0-9] [0-9] [0-9]

Day <- '0' [1-9] / [12] [0-9] / '3' [01] 


# Token Matchers

SEP <- '/'

COLON <- ':'

DQ <- '"'

NOT <- 'NOT'

AND <- 'AND'

OR <- 'OR'

RANGEOP <- '<=' / '>=' / '<' / '>'

SP <- [ \t\r\n]+

Boolean <- 'true' / 'false'

Word <- [a-zA-Z_] [a-zA-Z0-9_]*

Number <- [0-9]+
